/*
Custom properties
*/

:root {

  --opacity: 0%;
  --clr-light: 230 77% 90%;
  --clr-white: 0 0% 100%;
  --clr-dark: 230deg 35% 7%;
}


/* Box sizing rules */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Remove default margin */
body,
h1,
h2,
h3,
h4,
p,
figure,
blockquote,
dl,
dd {
  margin-block-end: 0;
}


/* Remove list styles on ul, ol elements with a list role, which suggests default styling will be removed */
ul[role='list'],
ol[role='list'] {
  list-style: none;
}

/* Set core root defaults */
html:focus-within {
  scroll-behavior: smooth;
}

/* Set core body defaults */
body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
}

/* A elements that don't have a class get default styles */
a:not([class]) {
  text-decoration-skip-ink: auto;
}

/* Make images easier to work with */
img,
picture {
  max-width: 100%;
  display: block;
}

/* Inherit fonts for inputs and buttons */
input,
button,
textarea,
select {
  font: inherit;
}

/* Remove all animations, transitions and smooth scroll for people that prefer not to see them */
@media (prefers-reduced-motion: reduce) {
  html:focus-within {
    scroll-behavior: auto;
  }

  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}



/* ------------------- */
/* Utility classes     */
/* ------------------- */

.space-between {
  justify-content: space-between;
}

.flex {
  display: flex;
  gap: var(--gap, 1rem);
}

.center {
  object-position: center;
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.container {
  padding-inline: 2em;
  margin-inline: auto;
  max-width: 80rem;

  @media screen and (max-width: 1050px) {
    display: block;
    flex-grow: 0;
  }
}

// color section
.bg-dark {
  background-color: hsl(var(--clr-dark) / 20);
}

.bg-light {
  background-color: hsl(var(--clr-light));
}

.bg-white {
  background-color: hsl(var(--clr-white));
}

.text-accent {
  color: hsl(var(--clr-light))
}

.text-white {
  color: hsl(var(--clr-white))
}

.text-dark {
  color: hsl(var(--clr-dark))
}

// Components

.example-component {
  background-color: hsl(var(--clr-light) / .2);
}

.color-box {
  padding: 2em 5em;
  flex-grow: 1;
}

#colors {
  position: relative;
}

// font section
h1,
h2,
h3 {
  font-family: 'Bellefair Regular';
}

h1 {
  font-size: 9.375em;
}

h2 {
  font-size: 6.25em;
}

h3 {
  font-size: 4em;
}

h4 {
  font-size: 2em;
}